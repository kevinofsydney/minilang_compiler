Grammar

    0 $accept: program $end

    1 program: declaration_list statement_list

    2 declaration_list: %empty
    3                 | declaration_list declaration

    4 declaration: tVAR tIDENTIFIER ':' type tASSIGN exp ';'

    5 statement_list: %empty
    6               | statement_list statement

    7 statement: tREAD tIDENTIFIER ';'
    8          | tPRINT exp ';'
    9          | tIDENTIFIER tASSIGN exp ';'
   10          | tIF exp '{' statement_list '}'
   11          | tIF exp '{' statement_list '}' tELSE '{' statement_list '}'
   12          | tWHILE exp '{' statement_list '}'

   13 exp: exp '+' exp
   14    | exp '-' exp
   15    | exp tAND exp
   16    | exp tOR exp
   17    | exp tEQ exp
   18    | exp tNEQ exp
   19    | '-' exp
   20    | exp '*' exp
   21    | exp '/' exp
   22    | tINTVAL
   23    | tFLOATVAL
   24    | tSTRINGVAL
   25    | tIDENTIFIER
   26    | tTRUE
   27    | tFALSE
   28    | '!' exp
   29    | '(' exp ')'

   30 type: tINT
   31     | tFLOAT
   32     | tSTRING
   33     | tBOOLEAN


Terminals, with rules where they appear

$end (0) 0
'!' (33) 28
'(' (40) 29
')' (41) 29
'*' (42) 20
'+' (43) 13
'-' (45) 14 19
'/' (47) 21
':' (58) 4
';' (59) 4 7 8 9
'{' (123) 10 11 12
'}' (125) 10 11 12
error (256)
tBOOLEAN (258) 33
tINT (259) 30
tFLOAT (260) 31
tSTRING (261) 32
tVAR (262) 4
tIF (263) 10 11
tELSE (264) 11
tWHILE (265) 12
tPRINT (266) 8
tREAD (267) 7
tINTVAL (268) 22
tSTRINGVAL (269) 24
tFLOATVAL (270) 23
tIDENTIFIER (271) 4 7 9 25
tTRUE (272) 26
tFALSE (273) 27
tASSIGN (274) 4 9
tOR (275) 16
tAND (276) 15
tEQ (277) 17
tNEQ (278) 18
tUMINUS (279)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
declaration_list (38)
    on left: 2 3, on right: 1 3
declaration (39)
    on left: 4, on right: 3
statement_list (40)
    on left: 5 6, on right: 1 6 10 11 12
statement (41)
    on left: 7 8 9 10 11 12, on right: 6
exp (42)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    4 8 9 10 11 12 13 14 15 16 17 18 19 20 21 28 29
type (43)
    on left: 30 31 32 33, on right: 4


State 0

    0 $accept: . program $end
    1 program: . declaration_list statement_list
    2 declaration_list: . %empty
    3                 | . declaration_list declaration

    $default  reduce using rule 2 (declaration_list)

    program           go to state 1
    declaration_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declaration_list . statement_list
    3 declaration_list: declaration_list . declaration
    4 declaration: . tVAR tIDENTIFIER ':' type tASSIGN exp ';'
    5 statement_list: . %empty  [$end, tIF, tWHILE, tPRINT, tREAD, tIDENTIFIER]
    6               | . statement_list statement

    tVAR  shift, and go to state 4

    $default  reduce using rule 5 (statement_list)

    declaration     go to state 5
    statement_list  go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 declaration: tVAR . tIDENTIFIER ':' type tASSIGN exp ';'

    tIDENTIFIER  shift, and go to state 7


State 5

    3 declaration_list: declaration_list declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    1 program: declaration_list statement_list .  [$end]
    6 statement_list: statement_list . statement
    7 statement: . tREAD tIDENTIFIER ';'
    8          | . tPRINT exp ';'
    9          | . tIDENTIFIER tASSIGN exp ';'
   10          | . tIF exp '{' statement_list '}'
   11          | . tIF exp '{' statement_list '}' tELSE '{' statement_list '}'
   12          | . tWHILE exp '{' statement_list '}'

    tIF          shift, and go to state 8
    tWHILE       shift, and go to state 9
    tPRINT       shift, and go to state 10
    tREAD        shift, and go to state 11
    tIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 1 (program)

    statement  go to state 13


State 7

    4 declaration: tVAR tIDENTIFIER . ':' type tASSIGN exp ';'

    ':'  shift, and go to state 14


State 8

   10 statement: tIF . exp '{' statement_list '}'
   11          | tIF . exp '{' statement_list '}' tELSE '{' statement_list '}'
   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 24


State 9

   12 statement: tWHILE . exp '{' statement_list '}'
   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 25


State 10

    8 statement: tPRINT . exp ';'
   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 26


State 11

    7 statement: tREAD . tIDENTIFIER ';'

    tIDENTIFIER  shift, and go to state 27


State 12

    9 statement: tIDENTIFIER . tASSIGN exp ';'

    tASSIGN  shift, and go to state 28


State 13

    6 statement_list: statement_list statement .

    $default  reduce using rule 6 (statement_list)


State 14

    4 declaration: tVAR tIDENTIFIER ':' . type tASSIGN exp ';'
   30 type: . tINT
   31     | . tFLOAT
   32     | . tSTRING
   33     | . tBOOLEAN

    tBOOLEAN  shift, and go to state 29
    tINT      shift, and go to state 30
    tFLOAT    shift, and go to state 31
    tSTRING   shift, and go to state 32

    type  go to state 33


State 15

   22 exp: tINTVAL .

    $default  reduce using rule 22 (exp)


State 16

   24 exp: tSTRINGVAL .

    $default  reduce using rule 24 (exp)


State 17

   23 exp: tFLOATVAL .

    $default  reduce using rule 23 (exp)


State 18

   25 exp: tIDENTIFIER .

    $default  reduce using rule 25 (exp)


State 19

   26 exp: tTRUE .

    $default  reduce using rule 26 (exp)


State 20

   27 exp: tFALSE .

    $default  reduce using rule 27 (exp)


State 21

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'
   29    | '(' . exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 34


State 22

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   19    | '-' . exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 35


State 23

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   28    | '!' . exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 36


State 24

   10 statement: tIF exp . '{' statement_list '}'
   11          | tIF exp . '{' statement_list '}' tELSE '{' statement_list '}'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    '{'   shift, and go to state 37
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 25

   12 statement: tWHILE exp . '{' statement_list '}'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    '{'   shift, and go to state 46
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 26

    8 statement: tPRINT exp . ';'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    ';'   shift, and go to state 47
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 27

    7 statement: tREAD tIDENTIFIER . ';'

    ';'  shift, and go to state 48


State 28

    9 statement: tIDENTIFIER tASSIGN . exp ';'
   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 49


State 29

   33 type: tBOOLEAN .

    $default  reduce using rule 33 (type)


State 30

   30 type: tINT .

    $default  reduce using rule 30 (type)


State 31

   31 type: tFLOAT .

    $default  reduce using rule 31 (type)


State 32

   32 type: tSTRING .

    $default  reduce using rule 32 (type)


State 33

    4 declaration: tVAR tIDENTIFIER ':' type . tASSIGN exp ';'

    tASSIGN  shift, and go to state 50


State 34

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp
   29    | '(' exp . ')'

    ')'   shift, and go to state 51
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 35

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   19    | '-' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-', '*', '/']
   20    | exp . '*' exp
   21    | exp . '/' exp

    $default  reduce using rule 19 (exp)

    Conflict between rule 19 and token tOR resolved as reduce (tOR < tUMINUS).
    Conflict between rule 19 and token tAND resolved as reduce (tAND < tUMINUS).
    Conflict between rule 19 and token tEQ resolved as reduce (tEQ < tUMINUS).
    Conflict between rule 19 and token tNEQ resolved as reduce (tNEQ < tUMINUS).
    Conflict between rule 19 and token '+' resolved as reduce ('+' < tUMINUS).
    Conflict between rule 19 and token '-' resolved as reduce ('-' < tUMINUS).
    Conflict between rule 19 and token '*' resolved as reduce ('*' < tUMINUS).
    Conflict between rule 19 and token '/' resolved as reduce ('/' < tUMINUS).


State 36

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp
   28    | '!' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-', '*', '/']

    $default  reduce using rule 28 (exp)

    Conflict between rule 28 and token tOR resolved as reduce (tOR < '!').
    Conflict between rule 28 and token tAND resolved as reduce (tAND < '!').
    Conflict between rule 28 and token tEQ resolved as reduce (tEQ < '!').
    Conflict between rule 28 and token tNEQ resolved as reduce (tNEQ < '!').
    Conflict between rule 28 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 28 and token '-' resolved as reduce ('-' < '!').
    Conflict between rule 28 and token '*' resolved as reduce ('*' < '!').
    Conflict between rule 28 and token '/' resolved as reduce ('/' < '!').


State 37

    5 statement_list: . %empty
    6               | . statement_list statement
   10 statement: tIF exp '{' . statement_list '}'
   11          | tIF exp '{' . statement_list '}' tELSE '{' statement_list '}'

    $default  reduce using rule 5 (statement_list)

    statement_list  go to state 52


State 38

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   16    | exp tOR . exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 53


State 39

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   15    | exp tAND . exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 54


State 40

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   17    | exp tEQ . exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 55


State 41

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   18    | exp tNEQ . exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 56


State 42

   13 exp: . exp '+' exp
   13    | exp '+' . exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 57


State 43

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   14    | exp '-' . exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 58


State 44

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   20    | exp '*' . exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 59


State 45

   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   21    | exp '/' . exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 60


State 46

    5 statement_list: . %empty
    6               | . statement_list statement
   12 statement: tWHILE exp '{' . statement_list '}'

    $default  reduce using rule 5 (statement_list)

    statement_list  go to state 61


State 47

    8 statement: tPRINT exp ';' .

    $default  reduce using rule 8 (statement)


State 48

    7 statement: tREAD tIDENTIFIER ';' .

    $default  reduce using rule 7 (statement)


State 49

    9 statement: tIDENTIFIER tASSIGN exp . ';'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    ';'   shift, and go to state 62
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 50

    4 declaration: tVAR tIDENTIFIER ':' type tASSIGN . exp ';'
   13 exp: . exp '+' exp
   14    | . exp '-' exp
   15    | . exp tAND exp
   16    | . exp tOR exp
   17    | . exp tEQ exp
   18    | . exp tNEQ exp
   19    | . '-' exp
   20    | . exp '*' exp
   21    | . exp '/' exp
   22    | . tINTVAL
   23    | . tFLOATVAL
   24    | . tSTRINGVAL
   25    | . tIDENTIFIER
   26    | . tTRUE
   27    | . tFALSE
   28    | . '!' exp
   29    | . '(' exp ')'

    tINTVAL      shift, and go to state 15
    tSTRINGVAL   shift, and go to state 16
    tFLOATVAL    shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18
    tTRUE        shift, and go to state 19
    tFALSE       shift, and go to state 20
    '('          shift, and go to state 21
    '-'          shift, and go to state 22
    '!'          shift, and go to state 23

    exp  go to state 63


State 51

   29 exp: '(' exp ')' .

    $default  reduce using rule 29 (exp)


State 52

    6 statement_list: statement_list . statement
    7 statement: . tREAD tIDENTIFIER ';'
    8          | . tPRINT exp ';'
    9          | . tIDENTIFIER tASSIGN exp ';'
   10          | . tIF exp '{' statement_list '}'
   10          | tIF exp '{' statement_list . '}'
   11          | . tIF exp '{' statement_list '}' tELSE '{' statement_list '}'
   11          | tIF exp '{' statement_list . '}' tELSE '{' statement_list '}'
   12          | . tWHILE exp '{' statement_list '}'

    tIF          shift, and go to state 8
    tWHILE       shift, and go to state 9
    tPRINT       shift, and go to state 10
    tREAD        shift, and go to state 11
    tIDENTIFIER  shift, and go to state 12
    '}'          shift, and go to state 64

    statement  go to state 13


State 53

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   16    | exp tOR exp .  [';', ')', '{', tOR]
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token tOR resolved as reduce (%left tOR).
    Conflict between rule 16 and token tAND resolved as shift (tOR < tAND).
    Conflict between rule 16 and token tEQ resolved as shift (tOR < tEQ).
    Conflict between rule 16 and token tNEQ resolved as shift (tOR < tNEQ).
    Conflict between rule 16 and token '+' resolved as shift (tOR < '+').
    Conflict between rule 16 and token '-' resolved as shift (tOR < '-').
    Conflict between rule 16 and token '*' resolved as shift (tOR < '*').
    Conflict between rule 16 and token '/' resolved as shift (tOR < '/').


State 54

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   15    | exp tAND exp .  [';', ')', '{', tOR, tAND]
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token tOR resolved as reduce (tOR < tAND).
    Conflict between rule 15 and token tAND resolved as reduce (%left tAND).
    Conflict between rule 15 and token tEQ resolved as shift (tAND < tEQ).
    Conflict between rule 15 and token tNEQ resolved as shift (tAND < tNEQ).
    Conflict between rule 15 and token '+' resolved as shift (tAND < '+').
    Conflict between rule 15 and token '-' resolved as shift (tAND < '-').
    Conflict between rule 15 and token '*' resolved as shift (tAND < '*').
    Conflict between rule 15 and token '/' resolved as shift (tAND < '/').


State 55

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   17    | exp tEQ exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ]
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 17 (exp)

    Conflict between rule 17 and token tOR resolved as reduce (tOR < tEQ).
    Conflict between rule 17 and token tAND resolved as reduce (tAND < tEQ).
    Conflict between rule 17 and token tEQ resolved as reduce (%left tEQ).
    Conflict between rule 17 and token tNEQ resolved as reduce (%left tNEQ).
    Conflict between rule 17 and token '+' resolved as shift (tEQ < '+').
    Conflict between rule 17 and token '-' resolved as shift (tEQ < '-').
    Conflict between rule 17 and token '*' resolved as shift (tEQ < '*').
    Conflict between rule 17 and token '/' resolved as shift (tEQ < '/').


State 56

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   18    | exp tNEQ exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ]
   20    | exp . '*' exp
   21    | exp . '/' exp

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 18 (exp)

    Conflict between rule 18 and token tOR resolved as reduce (tOR < tNEQ).
    Conflict between rule 18 and token tAND resolved as reduce (tAND < tNEQ).
    Conflict between rule 18 and token tEQ resolved as reduce (%left tEQ).
    Conflict between rule 18 and token tNEQ resolved as reduce (%left tNEQ).
    Conflict between rule 18 and token '+' resolved as shift (tNEQ < '+').
    Conflict between rule 18 and token '-' resolved as shift (tNEQ < '-').
    Conflict between rule 18 and token '*' resolved as shift (tNEQ < '*').
    Conflict between rule 18 and token '/' resolved as shift (tNEQ < '/').


State 57

   13 exp: exp . '+' exp
   13    | exp '+' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-']
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 13 (exp)

    Conflict between rule 13 and token tOR resolved as reduce (tOR < '+').
    Conflict between rule 13 and token tAND resolved as reduce (tAND < '+').
    Conflict between rule 13 and token tEQ resolved as reduce (tEQ < '+').
    Conflict between rule 13 and token tNEQ resolved as reduce (tNEQ < '+').
    Conflict between rule 13 and token '+' resolved as reduce (%left '+').
    Conflict between rule 13 and token '-' resolved as reduce (%left '-').
    Conflict between rule 13 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 13 and token '/' resolved as shift ('+' < '/').


State 58

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   14    | exp '-' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-']
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token tOR resolved as reduce (tOR < '-').
    Conflict between rule 14 and token tAND resolved as reduce (tAND < '-').
    Conflict between rule 14 and token tEQ resolved as reduce (tEQ < '-').
    Conflict between rule 14 and token tNEQ resolved as reduce (tNEQ < '-').
    Conflict between rule 14 and token '+' resolved as reduce (%left '+').
    Conflict between rule 14 and token '-' resolved as reduce (%left '-').
    Conflict between rule 14 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 14 and token '/' resolved as shift ('-' < '/').


State 59

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   20    | exp '*' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-', '*', '/']
   21    | exp . '/' exp

    $default  reduce using rule 20 (exp)

    Conflict between rule 20 and token tOR resolved as reduce (tOR < '*').
    Conflict between rule 20 and token tAND resolved as reduce (tAND < '*').
    Conflict between rule 20 and token tEQ resolved as reduce (tEQ < '*').
    Conflict between rule 20 and token tNEQ resolved as reduce (tNEQ < '*').
    Conflict between rule 20 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 20 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 20 and token '*' resolved as reduce (%left '*').
    Conflict between rule 20 and token '/' resolved as reduce (%left '/').


State 60

   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp
   21    | exp '/' exp .  [';', ')', '{', tOR, tAND, tEQ, tNEQ, '+', '-', '*', '/']

    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token tOR resolved as reduce (tOR < '/').
    Conflict between rule 21 and token tAND resolved as reduce (tAND < '/').
    Conflict between rule 21 and token tEQ resolved as reduce (tEQ < '/').
    Conflict between rule 21 and token tNEQ resolved as reduce (tNEQ < '/').
    Conflict between rule 21 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 21 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 21 and token '*' resolved as reduce (%left '*').
    Conflict between rule 21 and token '/' resolved as reduce (%left '/').


State 61

    6 statement_list: statement_list . statement
    7 statement: . tREAD tIDENTIFIER ';'
    8          | . tPRINT exp ';'
    9          | . tIDENTIFIER tASSIGN exp ';'
   10          | . tIF exp '{' statement_list '}'
   11          | . tIF exp '{' statement_list '}' tELSE '{' statement_list '}'
   12          | . tWHILE exp '{' statement_list '}'
   12          | tWHILE exp '{' statement_list . '}'

    tIF          shift, and go to state 8
    tWHILE       shift, and go to state 9
    tPRINT       shift, and go to state 10
    tREAD        shift, and go to state 11
    tIDENTIFIER  shift, and go to state 12
    '}'          shift, and go to state 65

    statement  go to state 13


State 62

    9 statement: tIDENTIFIER tASSIGN exp ';' .

    $default  reduce using rule 9 (statement)


State 63

    4 declaration: tVAR tIDENTIFIER ':' type tASSIGN exp . ';'
   13 exp: exp . '+' exp
   14    | exp . '-' exp
   15    | exp . tAND exp
   16    | exp . tOR exp
   17    | exp . tEQ exp
   18    | exp . tNEQ exp
   20    | exp . '*' exp
   21    | exp . '/' exp

    ';'   shift, and go to state 66
    tOR   shift, and go to state 38
    tAND  shift, and go to state 39
    tEQ   shift, and go to state 40
    tNEQ  shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 64

   10 statement: tIF exp '{' statement_list '}' .  [$end, tIF, tWHILE, tPRINT, tREAD, tIDENTIFIER, '}']
   11          | tIF exp '{' statement_list '}' . tELSE '{' statement_list '}'

    tELSE  shift, and go to state 67

    $default  reduce using rule 10 (statement)


State 65

   12 statement: tWHILE exp '{' statement_list '}' .

    $default  reduce using rule 12 (statement)


State 66

    4 declaration: tVAR tIDENTIFIER ':' type tASSIGN exp ';' .

    $default  reduce using rule 4 (declaration)


State 67

   11 statement: tIF exp '{' statement_list '}' tELSE . '{' statement_list '}'

    '{'  shift, and go to state 68


State 68

    5 statement_list: . %empty
    6               | . statement_list statement
   11 statement: tIF exp '{' statement_list '}' tELSE '{' . statement_list '}'

    $default  reduce using rule 5 (statement_list)

    statement_list  go to state 69


State 69

    6 statement_list: statement_list . statement
    7 statement: . tREAD tIDENTIFIER ';'
    8          | . tPRINT exp ';'
    9          | . tIDENTIFIER tASSIGN exp ';'
   10          | . tIF exp '{' statement_list '}'
   11          | . tIF exp '{' statement_list '}' tELSE '{' statement_list '}'
   11          | tIF exp '{' statement_list '}' tELSE '{' statement_list . '}'
   12          | . tWHILE exp '{' statement_list '}'

    tIF          shift, and go to state 8
    tWHILE       shift, and go to state 9
    tPRINT       shift, and go to state 10
    tREAD        shift, and go to state 11
    tIDENTIFIER  shift, and go to state 12
    '}'          shift, and go to state 70

    statement  go to state 13


State 70

   11 statement: tIF exp '{' statement_list '}' tELSE '{' statement_list '}' .

    $default  reduce using rule 11 (statement)
